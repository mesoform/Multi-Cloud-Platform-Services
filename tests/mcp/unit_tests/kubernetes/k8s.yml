components:
  common:
    stateful_set
  specs:
    test_app_1:
      config_map:
        metadata:
          name: "mosquitto-config-file"
          labels:
            env: "test"
        data:
          'test': 'test'
        data_file:
          - ../resources/mosquitto.conf
        binary_data:
          bar: L3Jvb3QvMTAw
        binary_file:
          - ../resources/binary.bin

      secret:
        metadata:
          annotations:
            key1:
            key2:
          name: "mosquitto-secret-file"
          namespace:
          labels:
            env: "test"
        type: Opaque
        data:
          login: login
          password: password
        data_file:
          - ../resources/secret.file

      deployment:
        metadata:
          name: "mosquitto"
          namespace:
          labels:
            app: "mosquitto"
        spec:
          replicas: 1
          selector:
            match_labels:
              app: "mosquitto"
          template:
            metadata:
              labels:
                app: "mosquitto"
            spec:
              container:
                - name: "mosquitto"
                  image: "eclipse-mosquitto:1.6.2"
                  port:
                    - container_port: 1883
                  resources:
                    limits:
                      cpu: "0.5"
                      memory: "512Mi"
                    requests:
                      cpu: "250m"
                      memory: "50Mi"
                  volume_mount:
                    - name: mosquitto-secret-file
                      mount_path: /mosquitto/secret
                    - name: mosquitto-config-file
                      mount_path: mosquitto/config
                - name: "tomcat-example"
                  image: "tomcat:8.5-jdk8-adoptopenjdk-openj9"
                  port:
                    - container_port: 8080
                  resources:
                    limits:
                      cpu: "0.5"
                      memory: "512Mi"
                    requests:
                      cpu: "250m"
                      memory: "50Mi"
              volume:
                - name: mosquitto-config-file
                  config_map:
                    name: mosquitto-config-file
                - name: mosquitto-secret-file
                  secret:
                    secret_name: mosquitto-secret-file

      pod:
        metadata:
          name: "nginx-example"
          namespace:
          labels:
            app: "mosquitto"
        spec:
          dns_policy: None
          dns_config:
            nameservers:
              - 1.1.1.1
              - 8.8.8.8
              - 9.9.9.9
            searches:
              - example.com
            option:
              - name: ndots
                value: 1
              - name: use-vc
          env:
            name: environment
            value: test
          container:
            - name: "nginx-example"
              image: "nginx:1.7.8"
              port:
                - container_port: 8080
              liveness_probe:
                http_get:
                  port: 80
                  http_header:
                    name: X-Custom-Header
                    value: Awesome
                initial_delay_seconds: 3
                period_seconds: 3

      ingress:
        wait_for_load_balancer: true
        metadata:
          name: "example-ingress"
        spec:
          backend:
            service_name: "service"
            service_port: 8080
          rule:
            host:
            http:
              paths:
                - path: "/"
                  backend:
                    service_port: 8080
                    service_name: "service"
                - path: "/"
                  backend:
                    service_port: 8080
                    service_name: "service2"
          tls:
            secret_name: "tls-secret"

      pod_autoscaler:
        metadata:
          name: test
        spec:
          max_replicas: 100
          min_replicas: 50
          scale_target_ref:
            kind: Deployment
            name: MyApp
          metric:
            type: External
            external:
              metric:
                name: latency
                selector:
                  match_labels:
                    lb_name: test
              target:
                type: Value
                value: 100

      service:
        metadata:
          name: "mosquitto"
          namespace:
          labels:
            env: "test"
          generate_name:
        spec:
          selector:
            app: "mosquitto"
          port:
            - name: "mosquitto-listener"
              port: 1883
              target_port: 1883
            - name: "tomcat-listener"
              port: 80
              target_port: 8080
          type: LoadBalancer

      job:
        metadata:
          name: pi
        spec:
          backoff_limit: 4
          template:
            spec:
              container:
                - name: pi
                  image: perl
                  command:
                    - "perl"
                    - "-Mbignum=bpi"
                    - "-wle"
                    - "print bpi(2000)"
              restart_policy: Never
        wait_for_completion: true

      stateful_set:
        metadata:
          name: web
        spec:
          selector:
            match_labels:
              app: nginx # has to match .spec.template.metadata.labels
          service_name: "nginx"
          replicas: 1 # by default is 1
          template:
            metadata:
              labels:
                app: nginx # has to match .spec.selector.matchLabels
            spec:
              termination_grace_period_seconds: 10
              container:
                - name: nginx
                  image: k8s.gcr.io/nginx-slim:0.8
                  port:
                    - container_port: 80
                      name: web
                  volume_mount:
                    - name: www-data
                      mount_path: /usr/share/nginx/html
          volume_claim_template:
            metadata:
              name: www-data
            spec:
              access_modes:
                - ReadWriteOnce
              storage_class_name: "standard"
              resources:
                requests:
                  storage: 1Gi


      persistent_volume:
        metadata:
          name: perisistent-volume
        spec:
          capacity:
            "storage": "10Gi"
          access_modes:
            - "ReadWriteOnce"
          persistent_volume_source:
            local:
              path: "./"
          node_affinity:
            required:
              node_selector_term:
                match_expressions:
                  - key: "nginx-example"
                    operator: "In"
                    values:
                      - "minikube"

      persistent_volume_claim:
        metadata:
          name: perisistent-volume-claim
        spec:
          access_modes:
            - "ReadWriteOnce"
          resources:
            requests:
              storage: "5Gi"
          volume_name: "persistent-volume"
          selector:
            match_expressions:
              - key: "nginx-example"
                operator: "In"
                values:
                  - "minikube"
